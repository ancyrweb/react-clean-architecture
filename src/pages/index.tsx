import Head from "next/head";
import { FormEvent, useRef, useState } from "react";
import { useUseCase } from "../components/hooks/useUseCase";
import { CreatePostUseCase } from "../modules/post/create-post.usecase";
import { AllState } from "@/modules/core/redux";
import { useSelector } from "react-redux";

const Home: React.FC = () => {
  async function savePost(e: FormEvent) {
    e.preventDefault();
    const result = await createPostUseCase.execute({
      title: title.current!.value,
      content: content.current!.value,
    });

    if (result.ok === false) {
      alert("Failed : " + result.error.message);
    }
  }

  const createPostUseCase = useUseCase(CreatePostUseCase);

  const title = useRef<HTMLInputElement>(null);
  const content = useRef<HTMLTextAreaElement>(null);
  const state: AllState = useSelector((state: AllState) => state);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <form onSubmit={savePost}>
          <label>Title :</label>
          <input type="text" id="title" name="title" ref={title} />
          <br />

          <label>Content :</label>
          <textarea id="content" name="content" ref={content}></textarea>

          <input type="submit" />
        </form>
        {Object.values(state.post.allPosts).map((post) => (
          <section key={post.id}>
            <h1>{post.title}</h1>
            <p>{post.content}</p>
            <p>Created : {post.createdAt.toISOString()}</p>
          </section>
        ))}
      </main>
    </>
  );
};

export default Home;
